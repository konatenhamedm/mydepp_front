import { type VariantProps } from "tailwind-variants";
import type { ClassValue } from "svelte/elements";
export type SelectVariants = VariantProps<typeof select>;
export declare const select: import("tailwind-variants").TVReturnType<{
    underline: {
        true: {
            select: string;
        };
        false: {
            select: string;
        };
    };
    size: {
        sm: {
            select: string;
        };
        md: {
            select: string;
        };
        lg: {
            select: string;
        };
    };
    disabled: {
        true: {
            select: string;
        };
        false: {};
    };
}, {
    base: string;
    select: string;
    closebutton: string;
}, undefined, {
    underline: {
        true: {
            select: string;
        };
        false: {
            select: string;
        };
    };
    size: {
        sm: {
            select: string;
        };
        md: {
            select: string;
        };
        lg: {
            select: string;
        };
    };
    disabled: {
        true: {
            select: string;
        };
        false: {};
    };
}, {
    base: string;
    select: string;
    closebutton: string;
}, import("tailwind-variants").TVReturnType<{
    underline: {
        true: {
            select: string;
        };
        false: {
            select: string;
        };
    };
    size: {
        sm: {
            select: string;
        };
        md: {
            select: string;
        };
        lg: {
            select: string;
        };
    };
    disabled: {
        true: {
            select: string;
        };
        false: {};
    };
}, {
    base: string;
    select: string;
    closebutton: string;
}, undefined, unknown, unknown, undefined>>;
export type SelectSlots = keyof typeof select.slots;
export type SelectTheme = Partial<Record<SelectSlots, ClassValue>>;
export type MultiSelectVariants = VariantProps<typeof multiSelect>;
export declare const multiSelect: import("tailwind-variants").TVReturnType<{
    size: {
        sm: string;
        md: string;
        lg: string;
    };
    disabled: {
        true: {
            base: string;
            dropdownitem: string;
            closebutton: string;
        };
        false: {
            base: string;
        };
    };
    active: {
        true: {
            dropdownitem: string;
        };
    };
    selected: {
        true: {
            dropdownitem: string;
        };
    };
}, {
    base: string;
    select: string;
    dropdown: string;
    dropdownitem: string;
    closebutton: string;
}, undefined, {
    size: {
        sm: string;
        md: string;
        lg: string;
    };
    disabled: {
        true: {
            base: string;
            dropdownitem: string;
            closebutton: string;
        };
        false: {
            base: string;
        };
    };
    active: {
        true: {
            dropdownitem: string;
        };
    };
    selected: {
        true: {
            dropdownitem: string;
        };
    };
}, {
    base: string;
    select: string;
    dropdown: string;
    dropdownitem: string;
    closebutton: string;
}, import("tailwind-variants").TVReturnType<{
    size: {
        sm: string;
        md: string;
        lg: string;
    };
    disabled: {
        true: {
            base: string;
            dropdownitem: string;
            closebutton: string;
        };
        false: {
            base: string;
        };
    };
    active: {
        true: {
            dropdownitem: string;
        };
    };
    selected: {
        true: {
            dropdownitem: string;
        };
    };
}, {
    base: string;
    select: string;
    dropdown: string;
    dropdownitem: string;
    closebutton: string;
}, undefined, unknown, unknown, undefined>>;
export type MultiSelectSlots = keyof typeof multiSelect.slots;
export type MultiSelectTheme = Partial<Record<MultiSelectSlots, ClassValue>>;
