import { type VariantProps } from "tailwind-variants";
import type { ClassValue } from "svelte/elements";
export type StepIndicatorVariants = VariantProps<typeof stepIndicator>;
export declare const stepIndicator: import("tailwind-variants").TVReturnType<{
    size: {
        xs: {
            container: string;
        };
        sm: {
            container: string;
        };
        md: {
            container: string;
        };
        lg: {
            container: string;
        };
        xl: {
            container: string;
        };
    };
    color: {
        primary: {
            step: string;
            stepGlow: string;
        };
        secondary: {
            step: string;
            stepGlow: string;
        };
        gray: {
            step: string;
            stepGlow: string;
        };
        red: {
            step: string;
            stepGlow: string;
        };
        yellow: {
            step: string;
            stepGlow: string;
        };
        green: {
            step: string;
            stepGlow: string;
        };
        indigo: {
            step: string;
            stepGlow: string;
        };
        purple: {
            step: string;
            stepGlow: string;
        };
        pink: {
            step: string;
            stepGlow: string;
        };
        blue: {
            step: string;
            stepGlow: string;
        };
        custom: {
            step: string;
            stepGlow: string;
        };
    };
    glow: {
        true: {};
        false: {};
    };
    hideLabel: {
        true: {};
        false: {};
    };
}, {
    base: string;
    label: string;
    container: string;
    stepWrapper: string;
    step: string;
    stepGlow: string;
    incompleteStep: string;
}, undefined, {
    size: {
        xs: {
            container: string;
        };
        sm: {
            container: string;
        };
        md: {
            container: string;
        };
        lg: {
            container: string;
        };
        xl: {
            container: string;
        };
    };
    color: {
        primary: {
            step: string;
            stepGlow: string;
        };
        secondary: {
            step: string;
            stepGlow: string;
        };
        gray: {
            step: string;
            stepGlow: string;
        };
        red: {
            step: string;
            stepGlow: string;
        };
        yellow: {
            step: string;
            stepGlow: string;
        };
        green: {
            step: string;
            stepGlow: string;
        };
        indigo: {
            step: string;
            stepGlow: string;
        };
        purple: {
            step: string;
            stepGlow: string;
        };
        pink: {
            step: string;
            stepGlow: string;
        };
        blue: {
            step: string;
            stepGlow: string;
        };
        custom: {
            step: string;
            stepGlow: string;
        };
    };
    glow: {
        true: {};
        false: {};
    };
    hideLabel: {
        true: {};
        false: {};
    };
}, {
    base: string;
    label: string;
    container: string;
    stepWrapper: string;
    step: string;
    stepGlow: string;
    incompleteStep: string;
}, import("tailwind-variants").TVReturnType<{
    size: {
        xs: {
            container: string;
        };
        sm: {
            container: string;
        };
        md: {
            container: string;
        };
        lg: {
            container: string;
        };
        xl: {
            container: string;
        };
    };
    color: {
        primary: {
            step: string;
            stepGlow: string;
        };
        secondary: {
            step: string;
            stepGlow: string;
        };
        gray: {
            step: string;
            stepGlow: string;
        };
        red: {
            step: string;
            stepGlow: string;
        };
        yellow: {
            step: string;
            stepGlow: string;
        };
        green: {
            step: string;
            stepGlow: string;
        };
        indigo: {
            step: string;
            stepGlow: string;
        };
        purple: {
            step: string;
            stepGlow: string;
        };
        pink: {
            step: string;
            stepGlow: string;
        };
        blue: {
            step: string;
            stepGlow: string;
        };
        custom: {
            step: string;
            stepGlow: string;
        };
    };
    glow: {
        true: {};
        false: {};
    };
    hideLabel: {
        true: {};
        false: {};
    };
}, {
    base: string;
    label: string;
    container: string;
    stepWrapper: string;
    step: string;
    stepGlow: string;
    incompleteStep: string;
}, undefined, unknown, unknown, undefined>>;
export type StepIndicatorSlots = keyof typeof stepIndicator.slots;
export type StepIndicatorTheme = Partial<Record<StepIndicatorSlots, ClassValue>>;
export declare const getStepStateClasses: (stepIndex: number, currentStep: number) => "data-[state=current]" | "data-[state=completed]" | "data-[state=incomplete]";
