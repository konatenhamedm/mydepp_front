import { type VariantProps } from "tailwind-variants";
import type { ClassValue } from "svelte/elements";
import type { Classes } from "../theme/themeUtils";
export type TimelineVariants = VariantProps<typeof timeline>;
export type ActivityItemVariants = VariantProps<typeof activityItem> & Classes<typeof activityItem>;
export type GroupVariants = VariantProps<typeof group> & Classes<typeof group>;
export type GroupItemVariants = VariantProps<typeof groupItem> & Classes<typeof groupItem>;
export type TimelineItemVariants = VariantProps<typeof timelineItem> & Classes<typeof timelineItem>;
export type ActivityTheme = ClassValue;
export type ActivityItemSlots = keyof typeof activityItem.slots;
export type ActivityItemTheme = Partial<Record<ActivityItemSlots, ClassValue>>;
export type GroupSlots = keyof typeof group.slots;
export type GroupTheme = Partial<Record<GroupSlots, ClassValue>>;
export type GroupItemSlots = keyof typeof groupItem.slots;
export type GroupItemTheme = Partial<Record<GroupItemSlots, ClassValue>>;
export type TimelineTheme = ClassValue;
export type TimelineItemSlots = keyof typeof timelineItem.slots;
export type TimelineItemTheme = Partial<Record<TimelineItemSlots, ClassValue>>;
export declare const activity: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "relative border-s border-gray-200 dark:border-gray-700", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "relative border-s border-gray-200 dark:border-gray-700", unknown, unknown, undefined>>;
export declare const activityItem: import("tailwind-variants").TVReturnType<{
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            title?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            inner?: import("tailwind-variants").ClassValue;
            text?: import("tailwind-variants").ClassValue;
            time?: import("tailwind-variants").ClassValue;
            li?: import("tailwind-variants").ClassValue;
            outer?: import("tailwind-variants").ClassValue;
        };
    };
} | {
    [x: string]: {
        [x: string]: import("tailwind-variants").ClassValue | {
            title?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            inner?: import("tailwind-variants").ClassValue;
            text?: import("tailwind-variants").ClassValue;
            time?: import("tailwind-variants").ClassValue;
            li?: import("tailwind-variants").ClassValue;
            outer?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    li: string;
    span: string;
    img: string;
    outer: string;
    inner: string;
    time: string;
    title: string;
    text: string;
}, undefined, {
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            title?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            inner?: import("tailwind-variants").ClassValue;
            text?: import("tailwind-variants").ClassValue;
            time?: import("tailwind-variants").ClassValue;
            li?: import("tailwind-variants").ClassValue;
            outer?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    li: string;
    span: string;
    img: string;
    outer: string;
    inner: string;
    time: string;
    title: string;
    text: string;
}, import("tailwind-variants").TVReturnType<unknown, {
    li: string;
    span: string;
    img: string;
    outer: string;
    inner: string;
    time: string;
    title: string;
    text: string;
}, undefined, unknown, unknown, undefined>>;
export declare const group: import("tailwind-variants").TVReturnType<{
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            div?: import("tailwind-variants").ClassValue;
            time?: import("tailwind-variants").ClassValue;
            ol?: import("tailwind-variants").ClassValue;
        };
    };
} | {
    [x: string]: {
        [x: string]: import("tailwind-variants").ClassValue | {
            div?: import("tailwind-variants").ClassValue;
            time?: import("tailwind-variants").ClassValue;
            ol?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    div: string;
    time: string;
    ol: string;
}, undefined, {
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            div?: import("tailwind-variants").ClassValue;
            time?: import("tailwind-variants").ClassValue;
            ol?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    div: string;
    time: string;
    ol: string;
}, import("tailwind-variants").TVReturnType<unknown, {
    div: string;
    time: string;
    ol: string;
}, undefined, unknown, unknown, undefined>>;
export declare const groupItem: import("tailwind-variants").TVReturnType<{
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            title?: import("tailwind-variants").ClassValue;
            div?: import("tailwind-variants").ClassValue;
            svg?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
            a?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
        };
    };
} | {
    [x: string]: {
        [x: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            title?: import("tailwind-variants").ClassValue;
            div?: import("tailwind-variants").ClassValue;
            svg?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
            a?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    a: string;
    img: string;
    div: string;
    title: string;
    span: string;
    svg: string;
}, undefined, {
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            title?: import("tailwind-variants").ClassValue;
            div?: import("tailwind-variants").ClassValue;
            svg?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
            a?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    a: string;
    img: string;
    div: string;
    title: string;
    span: string;
    svg: string;
}, import("tailwind-variants").TVReturnType<unknown, {
    base: string;
    a: string;
    img: string;
    div: string;
    title: string;
    span: string;
    svg: string;
}, undefined, unknown, unknown, undefined>>;
export declare const timeline: import("tailwind-variants").TVReturnType<{
    order: {
        group: string;
        horizontal: string;
        activity: string;
        vertical: string;
        default: string;
    };
}, undefined, undefined, {
    order: {
        group: string;
        horizontal: string;
        activity: string;
        vertical: string;
        default: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    order: {
        group: string;
        horizontal: string;
        activity: string;
        vertical: string;
        default: string;
    };
}, undefined, undefined, unknown, unknown, undefined>>;
export declare const timelineItem: import("tailwind-variants").TVReturnType<{
    order: {
        default: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        vertical: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        horizontal: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        activity: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        group: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
    };
}, {
    base: string;
    div: string;
    time: string;
    h3: string;
    svg: string;
}, undefined, {
    order: {
        default: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        vertical: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        horizontal: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        activity: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        group: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
    };
}, {
    base: string;
    div: string;
    time: string;
    h3: string;
    svg: string;
}, import("tailwind-variants").TVReturnType<{
    order: {
        default: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        vertical: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        horizontal: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        activity: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
        group: {
            base: string;
            div: string;
            time: string;
            h3: string;
        };
    };
}, {
    base: string;
    div: string;
    time: string;
    h3: string;
    svg: string;
}, undefined, unknown, unknown, undefined>>;
